// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;

// –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
tg.expand();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
tg.ready();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let userData = null;
let currentSection = null;

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∑–∞–≥–ª—É—à–∫–∞)
    loadUserData();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
    showWelcomeScreen();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    updateDateTime();
    setInterval(updateDateTime, 60000);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupNavigation();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadUserData() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API –±–æ—Ç–∞
    userData = {
        name: "Vault Resident",
        balance: 42.5,
        clan: "Wastelanders",
        level: 15,
        energy: 85,
        maxEnergy: 100,
        xp: 1250,
        nextLevelXp: 2000
    };
    
    updateUserInfo();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function updateUserInfo() {
    if (userData) {
        document.getElementById('balance-display').textContent = `BAL: ${userData.balance} TON`;
        document.getElementById('clan-display').textContent = `CLAN: ${userData.clan}`;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
function updateDateTime() {
    const now = new Date();
    const timeStr = now.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
    document.getElementById('time-display').textContent = `üïê ${timeStr}`;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
function showWelcomeScreen() {
    const welcomeScreen = document.getElementById('welcome-screen');
    const mainScreen = document.getElementById('main-screen');
    
    welcomeScreen.classList.add('active');
    mainScreen.classList.remove('active');
    
    // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
    setTimeout(() => {
        welcomeScreen.classList.remove('active');
        mainScreen.classList.add('active');
        showSection('stat'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª STAT
    }, 3000);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function setupNavigation() {
    const navButtons = document.querySelectorAll('.nav-btn');
    
    navButtons.forEach(button => {
        button.addEventListener('click', function() {
            const section = this.getAttribute('data-section');
            showSection(section);
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            this.classList.add('active');
            setTimeout(() => {
                this.classList.remove('active');
            }, 300);
        });
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–¥–µ–ª
function showSection(section) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã
    const allSections = document.querySelectorAll('.section-content');
    allSections.forEach(sec => sec.classList.remove('active'));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª
    const targetSection = document.getElementById(`${section}-section`);
    if (targetSection) {
        targetSection.classList.add('active');
    } else {
        // –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        createSectionContent(section);
    }
    
    currentSection = section;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤
function createSectionContent(section) {
    const contentArea = document.getElementById('content-area');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const oldContent = document.getElementById(`${section}-section`);
    if (oldContent) {
        oldContent.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const sectionContent = document.createElement('div');
    sectionContent.id = `${section}-section`;
    sectionContent.classList.add('section-content', 'active');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–¥–µ–ª–∞
    switch(section) {
        case 'stat':
            sectionContent.innerHTML = `
                <h2>STATUS REPORT</h2>
                <div class="stat-item">
                    <div class="stat-label">LEVEL</div>
                    <div class="stat-value">${userData.level}</div>
                </div>
                <div class="stat-item">
                    <div class="stat-label">EXPERIENCE</div>
                    <div class="stat-value">${userData.xp}/${userData.nextLevelXp} XP</div>
                </div>
                <div class="stat-item">
                    <div class="stat-label">ENERGY</div>
                    <div class="stat-value">${userData.energy}/${userData.maxEnergy}</div>
                </div>
                <div class="stat-item">
                    <div class="stat-label">TON BALANCE</div>
                    <div class="stat-value">${userData.balance} TON</div>
                </div>
                <div class="stat-item">
                    <div class="stat-label">CLAN AFFILIATION</div>
                    <div class="stat-value">${userData.clan}</div>
                </div>
            `;
            break;
            
        case 'wallet':
            sectionContent.innerHTML = `
                <h2>WALLET MANAGEMENT</h2>
                <p>Your cryptocurrency wallet details will appear here.</p>
                <div class="stat-item">
                    <div class="stat-label">TON BALANCE</div>
                    <div class="stat-value">${userData.balance} TON</div>
                </div>
                <div class="stat-item">
                    <div class="stat-label">TSAR TOKENS</div>
                    <div class="stat-value">0 TSAR</div>
                </div>
            `;
            break;
            
        case 'runner':
            sectionContent.innerHTML = `
                <h2>QUEST BOARD</h2>
                <p>Available missions and tasks will appear here.</p>
                <div class="stat-item">
                    <div class="stat-label">ACTIVE QUESTS</div>
                    <div class="stat-value">3</div>
                </div>
                <div class="stat-item">
                    <div class="stat-label">COMPLETED</div>
                    <div class="stat-value">27</div>
                </div>
            `;
            break;
            
        default:
            sectionContent.innerHTML = `
                <h2>${section.toUpperCase()} SECTION</h2>
                <p>This section is under development. Check back later.</p>
            `;
    }
    
    contentArea.appendChild(sectionContent);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞
function sendData(action, data = {}) {
    const payload = {
        action: action,
        timestamp: new Date().getTime(),
        user: tg.initDataUnsafe.user,
        ...data
    };
    
    tg.sendData(JSON.stringify(payload));
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    initApp();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–∞–Ω–∏—è –¥–ª—è —Ç–µ–∫—Å—Ç–∞
    const welcomeText = document.querySelector('.glowing-text');
    welcomeText.style.opacity = '0';
    welcomeText.style.transition = 'opacity 2s ease-in-out';
    
    setTimeout(() => {
        welcomeText.style.opacity = '1';
    }, 500);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏, –µ—Å–ª–∏ —ç—Ç–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
    if (tg.platform !== 'unknown') {
        document.querySelector('.pipboy-button').style.display = 'block';
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±–æ—Ç–∞
tg.onEvent('webAppDataReceived', (event) => {
    console.log('Data received from bot:', event);
    // –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –±–æ—Ç–∞ –∑–¥–µ—Å—å
});